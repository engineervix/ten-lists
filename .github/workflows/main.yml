name: CI/CD

on:
  push:
    branches: [main]
    tags: ['v*']
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  deps:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

  lint:
    needs: deps
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        linter: [eslint, prettier, stylelint]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ${{ matrix.linter }}
        run: npm run ${{ matrix.linter }}

  test:
    needs: deps
    runs-on: ubuntu-24.04
    outputs:
      coverage: ${{ steps.extract_coverage.outputs.coverage }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test:cov

      - name: Extract test coverage
        id: extract_coverage
        run: |
          # Extract coverage percentage from the coverage report based on v8 provider in your config
          COVERAGE=$(find .coverage -name "coverage-summary.json" -exec cat {} \; | grep -o '"pct":[0-9]*\.[0-9]*' | head -1 | cut -d':' -f2 || echo "0")

          # If JSON approach doesn't work, try alternative with grep on text report
          if [ "$COVERAGE" = "0" ]; then
            COVERAGE=$(find .coverage -name "index.html" -exec grep -o "Total.*[0-9]\+\.[0-9]\+%" {} \; | grep -o "[0-9]\+\.[0-9]\+%" | head -1 | tr -d "%" || echo "0")
          fi

          # Remove any trailing whitespace and convert to integer if needed
          COVERAGE=$(echo $COVERAGE | tr -d " ")

          # Set as output
          echo "coverage=$COVERAGE" >> $GITHUB_OUTPUT

  build:
    needs: [lint, test]
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build site
        run: npm run build

  coverage-badge:
    needs: test
    runs-on: ubuntu-24.04
    if: (github.repository == 'engineervix/ten-lists') && (github.ref == 'refs/heads/main')
    steps:
      - name: Create Test Coverage Badge
        uses: schneegans/dynamic-badges-action@v1.7.0
        with:
          auth: ${{ secrets.GIST_TOKEN }}
          gistID: b8c0c76feb9db65c08ca3190cc90e46a
          filename: covbadge.json
          label: coverage
          message: ${{ needs.test.outputs.coverage }}%
          valColorRange: ${{ needs.test.outputs.coverage }}
          minColorRange: 50
          maxColorRange: 90

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build]
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    outputs:
      release_name: ${{ steps.release_info.outputs.release_name }}
    steps:
      - uses: actions/checkout@v4

      - uses: extractions/setup-just@v3
        with:
          just-version: '1.39.0'

      - name: Generate release notes
        # This creates a file LATEST_RELEASE_NOTES.md in the parent directory (../)
        shell: bash
        run: |
          just release-notes

      - name: Set release info
        id: release_info
        run: |
          TODAY="($(TZ=Africa/Lusaka date --iso))"
          echo "release_name=${{ github.ref_name }} $TODAY" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ steps.release_info.outputs.release_name }}
          body_path: ../LATEST_RELEASE_NOTES.md
